#include "phase4.h"
#include <stdio.h>
#include <string.h>


char buf[10][MAXLINE+1];


void dump_buf() {

}

int main() {
    // zero out buffer
    for (int i = 0; i < 10; i++) explicit_bzero(buf[i], MAXLINE);


    char buf_to_cpy[320];
    sprintf(buf_to_cpy, "Message of length at least longer\n than MAXLINE. It may or may not be \nlonger than 2*MAXLINE, and can be \nup to long, but no longer than that.\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandnowthis");

    int buf_idx = 0;
    int i = 0;
    while (i < strlen(buf_to_cpy)) {
        int buf_num = buf_idx / MAXLINE;
        int place_in_buf = buf_idx % MAXLINE;
        printf("i = %d\n", i);
        printf("buf_idx = %d\n", buf_idx);
        printf("buf_idx / MAXLINE = %d\n", buf_num);
        printf("buf_idx mod MAXLINE = %d\n", place_in_buf);
        char ch_to_cpy = buf_to_cpy[i];
        printf("ch = %c\n", ch_to_cpy);

        if (buf_num < 10) {
            buf[buf_num][place_in_buf] = ch_to_cpy;
            buf_idx++;
        }

        if (place_in_buf == MAXLINE || ch_to_cpy == '\n') {
            buf_idx = (buf_num + 1) * MAXLINE;
            printf("NEW buf_idx = %d\n", buf_idx);
        }

        i++;
    }

    for (int i = 0; i < 10; i++) printf("buf %d: %s\n", i, buf[i]);

}
